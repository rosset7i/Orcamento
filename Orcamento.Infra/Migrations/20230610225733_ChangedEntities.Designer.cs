// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Orcamento.Infra.AppDbContext;

#nullable disable

namespace Orcamento.Infra.Migrations
{
    [DbContext(typeof(OrcamentoDbContext))]
    [Migration("20230610225733_ChangedEntities")]
    partial class ChangedEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Orcamento.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("fornecedor");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.OrcamentoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datadecriacao");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("fornecedorid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<double>("PrecoTotal")
                        .HasColumnType("double precision")
                        .HasColumnName("precototal");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("orcamento");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("marca");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("produto");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.ProdutoOrcamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("IdOrcamento")
                        .HasColumnType("uuid")
                        .HasColumnName("idorcamento");

                    b.Property<Guid>("IdProduto")
                        .HasColumnType("uuid")
                        .HasColumnName("idproduto");

                    b.Property<Guid>("OrcamentoEntityId")
                        .HasColumnType("uuid")
                        .HasColumnName("orcamentoentityid");

                    b.Property<double>("PrecoTotal")
                        .HasColumnType("double precision")
                        .HasColumnName("precototal");

                    b.Property<double>("PrecoUnitario")
                        .HasColumnType("double precision")
                        .HasColumnName("precounitario");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double precision")
                        .HasColumnName("quantidade");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.HasIndex("OrcamentoEntityId");

                    b.ToTable("produtoorcamento");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("passwordhash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("passwordsalt");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.OrcamentoEntity", b =>
                {
                    b.HasOne("Orcamento.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Orcamento")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.ProdutoOrcamento", b =>
                {
                    b.HasOne("Orcamento.Domain.Entities.Produto", "Produto")
                        .WithMany("ProdutoOrcamento")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orcamento.Domain.Entities.OrcamentoEntity", "OrcamentoEntity")
                        .WithMany("ProdutoOrcamento")
                        .HasForeignKey("OrcamentoEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrcamentoEntity");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.OrcamentoEntity", b =>
                {
                    b.Navigation("ProdutoOrcamento");
                });

            modelBuilder.Entity("Orcamento.Domain.Entities.Produto", b =>
                {
                    b.Navigation("ProdutoOrcamento");
                });
#pragma warning restore 612, 618
        }
    }
}
